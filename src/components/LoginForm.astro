---
import { fade } from "astro:transitions";
import { actions } from "astro:actions";
import { ChevronLeft } from "lucide-astro";

const result = Astro.getActionResult(actions.login); // Get action result
const errorMessage = result?.error?.message || null; // Default null

const buttonLoading = {
  old: { name: "fade", duration: "0.2s" },
  new: { name: "fade", duration: "0.2s" },
};
---

<div class="w-full max-w-md">
  <div class="mb-8">
    <a
      data-astro-reload
      href="/"
      class="flex items-center text-blue-600 hover:text-blue-700 mb-6"
    >
      <ChevronLeft class="w-5 h-5 mr-1" />
      Retour
    </a>
    <h1
      class="text-4xl font-extrabold text-gray-900 mb-2 bg-gradient-to-r from-gray-900 to-blue-800 bg-clip-text text-transparent"
    >
      Se connecter
    </h1>
    <p class="text-lg text-gray-600">
      Commencez à optimiser votre productivité aujourd'hui
    </p>
  </div>

  <div class="bg-white/90 backdrop-blur-lg rounded-2xl p-8 shadow-xl">
    <form
      method="POST"
      action={actions.login}
      enctype="application/x-www-form-urlencoded"
      class="space-y-6"
      id="loginForm"
    >
      {
        errorMessage && (
          <div class="p-4 mb-4 text-sm text-red-700 bg-red-100 rounded-lg">
            {errorMessage}
          </div>
        )
      }

      <div>
        <label for="email" class="block text-sm font-medium text-gray-700 mb-1">
          Email
        </label>
        <input
          type="email"
          id="email"
          name="email"
          class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          transition:persist
          required
        />
      </div>

      <div>
        <label
          for="password"
          class="block text-sm font-medium text-gray-700 mb-1"
        >
          Mot de passe
        </label>
        <input
          type="password"
          id="password"
          name="password"
          class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          transition:persist
          required
        />
      </div>
      <button
        type="submit"
        class="w-full px-6 py-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1"
        id="submitButton"
      >
        <span>Se connecter</span>
      </button>
      <!-- <button -->
      <!--   transition:animate="fade" -->
      <!--   type="submit" -->
      <!--   class="w-full px-6 py-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1" -->
      <!--   id="submitButton" -->
      <!-- > -->
      <!--   <span id="buttonText">Se connecter</span> -->
      <!--   <span id="loadingSpinner" class="hidden"> -->
      <!--     <svg -->
      <!--       class="animate-spin h-5 w-5 text-white inline ml-2" -->
      <!--       xmlns="http://www.w3.org/2000/svg" -->
      <!--       fill="none" -->
      <!--       viewBox="0 0 24 24" -->
      <!--     > -->
      <!--       <circle -->
      <!--         class="opacity-25" -->
      <!--         cx="12" -->
      <!--         cy="12" -->
      <!--         r="10" -->
      <!--         stroke="currentColor" -->
      <!--         stroke-width="4"></circle> -->
      <!--       <path -->
      <!--         class="opacity-75" -->
      <!--         fill="currentColor" -->
      <!--         d="M4 12a8 8 0 018-8v8H4z"></path> -->
      <!--     </svg> -->
      <!--   </span> -->
      <!-- </button> -->
    </form>

    <p class="mt-6 text-center text-gray-600">
      Pas de compte?{" "}
      <a href="/signup" class="text-blue-600 hover:text-blue-700 font-medium">
        S'inscrire
      </a>
    </p>
  </div>
</div>

<script>
  const form = document.getElementById("loginForm") as HTMLFormElement | null;
  const submitButton = document.getElementById(
    "submitButton",
  ) as HTMLButtonElement | null;
  const buttonText = document.getElementById(
    "buttonText",
  ) as HTMLElement | null;
  const loadingSpinner = document.getElementById(
    "loadingSpinner",
  ) as HTMLElement | null;

  if (form && submitButton && buttonText && loadingSpinner) {
    form.addEventListener("submit", () => {
      // Show spinner and disable button
      buttonText.classList.add("hidden");
      loadingSpinner.classList.remove("hidden");
      submitButton.disabled = true;

      // Wait for the page to reload or redirect
      window.addEventListener("pageshow", () => {
        buttonText.classList.remove("hidden");
        loadingSpinner.classList.add("hidden");
        submitButton.disabled = false;
      });
    });
  } else {
    console.error("One or more elements are missing in the DOM.");
  }
</script>
