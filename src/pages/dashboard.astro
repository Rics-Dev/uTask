---
import { actions } from "astro:actions";
const result = Astro.getActionResult(actions.logout); // Get action result
if (result && !result.error) {
  return Astro.redirect(`/`);
}
const user = Astro.locals.user;

import Layout from "../layouts/dashboardLayout.astro";
import {
  Users,
  Clock,
  AlertCircle,
  CheckCircle,
  Filter,
  Calendar,
  Bell,
  Search,
  Plus,
} from "lucide-astro";

import DashHeader from "../components/dashboard/DashHeader.astro";
import TaskGrid from "../components/dashboard/TaskGrid.astro";
import ProjectGrid from "../components/dashboard/ProjectGrid.astro";
import TaskFilters from "../components/dashboard/TaskFilters.astro";
import NewTaskModal from "../components/dashboard/NewTaskModal.astro";
---

<Layout>
  <div class="min-h-screen bg-gray-50">
    {/* Header */}
    <DashHeader />
    {/* Main Content */}
    <main class="max-w-full mx-auto px-4 sm:px-6 lg:px-12 py-8">
      {/* Stats Overview */}
      <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-xl shadow-sm p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm text-gray-500">Tâches en cours</p>
              <p class="text-2xl font-bold text-gray-900">12</p>
            </div>
            <div class="bg-blue-100 p-3 rounded-lg">
              <Clock class="w-6 h-6 text-blue-600" />
            </div>
          </div>
        </div>

        <div class="bg-white rounded-xl shadow-sm p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm text-gray-500">Tâches urgentes</p>
              <p class="text-2xl font-bold text-gray-900">3</p>
            </div>
            <div class="bg-red-100 p-3 rounded-lg">
              <AlertCircle class="w-6 h-6 text-red-600" />
            </div>
          </div>
        </div>

        <div class="bg-white rounded-xl shadow-sm p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm text-gray-500">Tâches terminées</p>
              <p class="text-2xl font-bold text-gray-900">28</p>
            </div>
            <div class="bg-green-100 p-3 rounded-lg">
              <CheckCircle class="w-6 h-6 text-green-600" />
            </div>
          </div>
        </div>

        <div class="bg-white rounded-xl shadow-sm p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm text-gray-500">Membres actifs</p>
              <p class="text-2xl font-bold text-gray-900">8</p>
            </div>
            <div class="bg-purple-100 p-3 rounded-lg">
              <Users class="w-6 h-6 text-purple-600" />
            </div>
          </div>
        </div>
      </div>

      <!-- Nouvelle section: Actions rapides -->
      <div class="flex justify-between items-center mb-6" client:load>
        <div class="flex space-x-4">
          <button
            id="newTaskBtn"
            class="flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
          >
            <Plus class="w-4 h-4 mr-2" />
            Nouvelle tâche
          </button>
          <button
            id="newProjectBtn"
            class="flex items-center px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700"
          >
            <Plus class="w-4 h-4 mr-2" />
            Nouveau projet
          </button>
        </div>

        <div class="flex items-center space-x-4">
          <div class="relative">
            <input
              type="search"
              placeholder="Rechercher..."
              class="pl-10 pr-4 py-2 border rounded-lg"
            />
            <Search class="w-4 h-4 text-gray-400 absolute left-3 top-3" />
          </div>

          <button class="relative">
            <Bell class="w-6 h-6 text-gray-600" />
            <span
              class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-4 h-4 flex items-center justify-center"
            >
              3
            </span>
          </button>
        </div>
      </div>

      <div class="grid grid-cols-12 gap-8">
        <!-- Colonne de gauche: Filtres + Calendrier -->
        <div class="col-span-3 space-y-6">
          <TaskFilters />
          <!-- <MiniCalendar client:load /> -->
          <!-- <NotificationCenter client:load /> -->
        </div>

        <!-- Colonne centrale: Tâches -->
        <div class="col-span-5">
          <TaskGrid
            server:defer
            showFilters={true}
            showSort={true}
            showSearch={true}
            view="detailed"
          />
        </div>

        <!-- Colonne droite: Projets -->
        <div class="col-span-4">
          <ProjectGrid
            server:defer
            showProgress={true}
            showMembers={true}
            showDeadlines={true}
          />
        </div>
      </div>
    </main>
    <!-- Ajout des modales -->
    <NewTaskModal />
    <!-- <NewProjectModal /> -->
  </div>
</Layout>

<script>
  // Gestion des événements pour les modales
  document.addEventListener("DOMContentLoaded", () => {
    const newTaskBtn = document.getElementById("newTaskBtn");
    const newProjectBtn = document.getElementById("newProjectBtn");

    if (newTaskBtn) {
      newTaskBtn.addEventListener("click", () => {
        const modal = document.getElementById("newTaskModal");
        if (modal) modal.classList.remove("hidden");
      });
    }

    if (newProjectBtn) {
      newProjectBtn.addEventListener("click", () => {
        const modal = document.getElementById("newProjectModal");
        if (modal) modal.classList.remove("hidden");
      });
    }

    // Fermeture des modales en cliquant en dehors
    document.addEventListener("click", (e) => {
      const taskModal = document.getElementById("newTaskModal");
      const projectModal = document.getElementById("newProjectModal");

      if (
        taskModal &&
        !taskModal.contains(e.target) &&
        e.target !== newTaskBtn
      ) {
        taskModal.classList.add("hidden");
      }

      if (
        projectModal &&
        !projectModal.contains(e.target) &&
        e.target !== newProjectBtn
      ) {
        projectModal.classList.add("hidden");
      }
    });

    // Gestion de la touche Escape
    document.addEventListener("keydown", (e) => {
      if (e.key === "Escape") {
        const taskModal = document.getElementById("newTaskModal");
        const projectModal = document.getElementById("newProjectModal");

        if (taskModal) taskModal.classList.add("hidden");
        if (projectModal) projectModal.classList.add("hidden");
      }
    });
  });
</script>
